<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-09-19T15:51:31+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jonathan Frenchâ€™s Blog</title><subtitle>This is my site to blog about iOS development, photography and being cancelled.</subtitle><entry><title type="html">Swift Optional Boolean</title><link href="http://localhost:4000/swift/development/2023/09/19/swift-optional-boolean.html" rel="alternate" type="text/html" title="Swift Optional Boolean" /><published>2023-09-19T13:02:05+03:00</published><updated>2023-09-19T13:02:05+03:00</updated><id>http://localhost:4000/swift/development/2023/09/19/swift-optional-boolean</id><content type="html" xml:base="http://localhost:4000/swift/development/2023/09/19/swift-optional-boolean.html"><![CDATA[<p>I finally found a use for an optional boolean in swift</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">import</span> <span class="kt">SwiftUI</span>

<span class="kd">struct</span> <span class="kt">ContentView</span><span class="p">:</span> <span class="kt">View</span> <span class="p">{</span>
    <span class="kd">@State</span> <span class="k">var</span> <span class="nv">isPlaying</span> <span class="p">:</span> <span class="kt">Bool</span><span class="p">?</span>
    <span class="k">var</span> <span class="nv">body</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">VStack</span> <span class="p">{</span>
            <span class="kt">Button</span> <span class="p">{</span>
                <span class="k">if</span> <span class="k">let</span> <span class="nv">playing</span> <span class="o">=</span> <span class="n">isPlaying</span> <span class="p">{</span>
                    <span class="n">isPlaying</span><span class="p">?</span><span class="o">.</span><span class="nf">toggle</span><span class="p">()</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                    <span class="n">isPlaying</span> <span class="o">=</span> <span class="kc">false</span>
                <span class="p">}</span>
                <span class="nf">print</span><span class="p">(</span><span class="s">"Button was tapped"</span><span class="p">)</span>
            <span class="p">}</span> <span class="nv">label</span><span class="p">:</span> <span class="p">{</span>
                <span class="k">if</span> <span class="k">let</span> <span class="nv">playing</span> <span class="o">=</span> <span class="n">isPlaying</span> <span class="p">{</span>
                    <span class="kt">Image</span><span class="p">(</span><span class="nv">systemName</span><span class="p">:</span> <span class="k">self</span><span class="o">.</span><span class="n">isPlaying</span> <span class="o">==</span> <span class="kc">true</span> <span class="p">?</span> <span class="s">"speaker.fill"</span> <span class="p">:</span> <span class="s">"speaker.slash"</span><span class="p">)</span><span class="o">.</span><span class="nf">imageScale</span><span class="p">(</span><span class="o">.</span><span class="n">large</span><span class="p">)</span>
                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                    <span class="kt">Image</span><span class="p">(</span><span class="nv">systemName</span><span class="p">:</span> <span class="s">"speaker.slash"</span><span class="p">)</span><span class="o">.</span><span class="nf">imageScale</span><span class="p">(</span><span class="o">.</span><span class="n">large</span><span class="p">)</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="o">.</span><span class="nf">padding</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">struct</span> <span class="kt">ContentView_Previews</span><span class="p">:</span> <span class="kt">PreviewProvider</span> <span class="p">{</span>
    <span class="kd">static</span> <span class="k">var</span> <span class="nv">previews</span><span class="p">:</span> <span class="kd">some</span> <span class="kt">View</span> <span class="p">{</span>
        <span class="kt">ContentView</span><span class="p">()</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>]]></content><author><name></name></author><category term="swift" /><category term="development" /><summary type="html"><![CDATA[I finally found a use for an optional boolean in swift]]></summary></entry></feed>